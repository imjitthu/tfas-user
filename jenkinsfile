pipeline { 

    agent any
    options { disableConcurrentBuilds() }

    parameters {
    //choice(name: 'tfaction', choices: ['init', 'plan', 'apply -auto-approve', 'destroy -auto-approve'], description: 'Pick any action')
    text(name: 'tfaction', defaultValue: '', description: 'Enter the terraform command Ex: terraform init')
               }

    environment {
        tfaction = "${params.tfaction}"
        invfile  = "user_inv"
        playbook = "user.yml"
                }

    stages ('Setup Roboshop Application') { 
        stage ('Installing shipping Server') { 
            steps { 
            withCredentials([aws(accessKeyVariable: 'AWS_ACCESS_KEY_ID', credentialsId: 'awskey', secretKeyVariable: 'AWS_SECRET_ACCESS_KEY')]) {
                    sh "${env.tfaction}"
                    }
            script {
                if (env.tfaction.contains('apply')) {
                    ansiblePlaybook credentialsId: 'DevOps321', installation: 'ansibletool', inventory: "${env.invfile}", playbook: "${env.playbook}"

                }
                else {
                    echo "terraform action is: ${env.tfaction}"
                    }
                    }
                }
            }
        }
    }